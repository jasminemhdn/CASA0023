# Introduction to Google Earth Engine (GEE)

## Summary: GEE Function and Interface

Google Earth Engine (GEE) is a cloud-based remote sensing data processing that allows us to access huge variety of open-source remote sensing product such as Landsat, Sentinel, and MODIS or raster product made by other people such as Impervious Surface. To use GEE, we must create an account first using Google account. GEE is connected directly to Google Drive, so we can save the unprocessed or already processed data into Google Drive and download it in case we want to use it for processing or lay outing the maps in GIS application such as QGIS. However, if the data too big, it would require large Google Drive space. Another alternative to store the processed data or present the maps online is by using Asset and Web Apps. This allows us to access the data we have already processed before for another analysis.

JavaScript is the main programming language used in GEE. But, we could also use Python when GEE is connected to Google Colab, Jupyter Notebook or QGIS. Even though it seems that JavaScript is harder to understand, GEE provides explanation of every syntax in Docs Panel. The picture below shows the GEE interface.

![](Week5_GEEInterface.png)

And this is the explanation of each part of the interface:

-   Script Panel: this panel store the scripts that has been saved and it allows us to create and load scripts.

-   Docs Panel: store the documentation and function description of GEE commands.

-   Assets Panel: a storage space to upload raster or vector data in GEE.

-   Console Panel: displays outputs, print statements, and errors when running scripts.

-   Map Panel: display geospatial datasets and analysis results.

-   Task Manager: manages long-running tasks like exporting images, tables, or maps.

-   Inspector Panel: allows us to click on the map and inspect pixel values.

-   Get Link: generate a shareable URL for the script and map view.

-   Save: save the current script.

-   Run: executes the script and applies it to the Map Panel.

-   Reset: clears all variables, print outputs, and layers.

-   Apps: provides access to custom web apps created in GEE.

-   Search Bar: find datasets, function, or scripts.

The picture below shows the example of MODIS Terra data catalog in GEE. In this catalog, there are information containing data availability, description of the data, raster bands and its spatial resolution, terms of use, citation, and dois. If we want to use this data, we can click IMPORT button in bottom right.

![](Week5_Catalog.png)

## Application: Global Artificial Impervious Area (GAIA)

Gong, Li and Zhang (2019) map impervious surface in China from 1978 - 2017 using NDVI, MNDWI, and SWIR value of Landsat data that differentiate urban areas with other type of land cover. They also use Night Time Light from VIIRS for masking to reduce potential confusion between impervious cover and bare land, particularly in arid and semi-arid areas. By utilising exclusion/inclusion algorithm in GEE, they produce a map with 93% accuracy and 87% similarities with previous studies. I like this research because they use open remote sensing data and develop the algorithm through GEE which makes it reproducible for analysis in other areas and the result can be very useful for analysing urban expansion or differentiate the year the an area being built. Something that feels missing from this paper is that I do not find how the author dealing with different spatial resolution of Landsat 1, 2, 3 (60 meters) and Landsat 4, 5, 7, 8 (30 meters) and how it affect the performance of the analysis especially when they said that earlier data have higher accuracy and at the same time there is a limited good quality in earlier data which produce more uncertainty. Furthermore, the analysis performance does not doing well in arid or semi-arid, cold, and highly mountainous region implying nighttime light is not strong enough to help preserve settlements in those areas. But then, in 2020, the author published another similar paper with upgraded upgrade the analysis of impervious surface to global coverage and fully use 30 meter spatial resolution landsat images from 1985 â€“ 2018 with Sentinel-1 complemented nighttime light data as ancillary datasets. In this upgrade, the backscatter coefficient of Sentinel-1 is used to generate a primary urban mask using a thresholding method for impervious surface mapping in arid region. The dataset that produce 89% of accuracy is being shared in GEE and can be used widely by users. I really like this dataset and use it a lot for my analysis. But, I also have some concern regarding how the low spatial resolution of Night Time Light can be used for delineating urban areas and how it might affect the overall spatial resolution of the result. Furthermore, I think it will be challenging to use the same method in current period where people start to design building using green roof because the methods rely on NDVI so it might be hard to differentiate building with vegetation areas.

![](Week5_GAIA.png)

## Reflection: GEE which Provide Powerful Tools and Reproducible Analysis

I think GEE is the answer to limitation in computer resources when doing raster analysis. Because GEE is a cloud-based processing, we do not have to worry about the computer storage or drive storage space as we can save the result in assets. Furthermore, because of the cloud-based processing, we do not have to rely on high specification computer which helps me a lot in doing analysis. Although, good internet access is a requirement for GEE. Moreover, the massive already preprocessed dataset that available in GEE allows us to make more innovative analysis on uncommon topic. It will also saving more time because we could just use the product rather than raw raster that need to go through correction. Although, we still have to aware of the impact of the product resolution and accuracy to our analysis. Beside using raster product directly, we can also applied the algorithm made by other users to our analysis and even made changes if needed. The reproducible part of GEE makes development of research on remote sensing application even more rapid. The tools provided in GEE is also awesome and powerful where we can apply different machine learning algorithm for our analysis and display the result through interactive web map directly. Another thing that I like from GEE is that the result of data processing is automatically upsampling the pixel unlike GIS software like QGIS and ArcGIS that in default use downsampling. It makes the result automatically matched with the finest spatial resolution data that are used.
